{
  "contractName": "BaseStorage",
  "abi": [
    {
      "inputs": [],
      "name": "controllerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controllerAddress",
          "type": "address"
        }
      ],
      "name": "setControllerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"controllerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controllerAddress\",\"type\":\"address\"}],\"name\":\"setControllerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/daelankane/code/ed/ether/ideas-chain/contracts/helpers/BaseStorage.sol\":\"BaseStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/daelankane/code/ed/ether/ideas-chain/contracts/helpers/BaseStorage.sol\":{\"keccak256\":\"0xf3427132c3fdc9f45579ba8aa82f5113b7b80d9c619f94fe5c8f073736cb7028\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8991a74196a0c5b7471366e1cc45b8ef122a8d8dd56b1c5face71de2b06e145d\",\"dweb:/ipfs/Qmf7xo9vMfLcDWhySuXqBpJANaiZpw7KUCc3KtnzpDxCnM\"]},\"/home/daelankane/code/ed/ether/ideas-chain/contracts/helpers/Owned.sol\":{\"keccak256\":\"0xe3bb6924ff84b054b8b604669f32e7417ace806d6c5bb673b555e94d8500da64\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c607beb1256644f5ec40f065d819355d9b288ae07ff1c864872504b2f6c22ca0\",\"dweb:/ipfs/Qme4du6uxMfkQhWL8sQz5ZEsvuQp9pkZVpARjrUizY2FGg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610332806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b24ea47146100515780638f84aa0914610085578063f2fde38b146100b9578063f3d3d448146100fd575b600080fd5b610059610141565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61008d610167565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061018b565b005b61013f6004803603602081101561011357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610260565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561021d57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea264697066735822122060c38bf7a3d4e43ed625b6f930637bb2018606906e281d3afd24465590ead1b264736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b24ea47146100515780638f84aa0914610085578063f2fde38b146100b9578063f3d3d448146100fd575b600080fd5b610059610141565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61008d610167565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061018b565b005b61013f6004803603602081101561011357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610260565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561021d57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea264697066735822122060c38bf7a3d4e43ed625b6f930637bb2018606906e281d3afd24465590ead1b264736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "92:286:1:-:0;;;;;;;;;;;;;158:10:2;143:12;;:25;;;;;;;;;;;;;;;;;;92:286:1;;;;;;",
  "deployedSourceMap": "92:286:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;127:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;91:27:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;255:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;164:124:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;127:32;;;;;;;;;;;;;:::o;91:27:2:-;;;;;;;;;;;;:::o;255:136::-;226:12;;;;;;;;;;212:26;;:10;:26;;;204:35;;;;;;353:1:::1;332:23;;:9;:23;;;;324:32;;;::::0;::::1;;377:9;362:12;::::0;:24:::1;;;;;;;;;;;;;;;;;;255:136:::0;:::o;164:124:1:-;226:12:2;;;;;;;;;;212:26;;:10;:26;;;204:35;;;;;;265:18:1::1;245:17;;:38;;;;;;;;;;;;;;;;;;164:124:::0;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.8.0;\n\nimport \"./Owned.sol\";\n\ncontract BaseStorage is Owned {\n\n  address public controllerAddress;\n\n  function setControllerAddress(address _controllerAddress) public onlyOwner {\n    controllerAddress = _controllerAddress;\n  }\n\n  modifier onlyController() {\n    require(msg.sender == controllerAddress);\n    _;\n  }\n}",
  "sourcePath": "/home/daelankane/code/ed/ether/ideas-chain/contracts/helpers/BaseStorage.sol",
  "ast": {
    "absolutePath": "/home/daelankane/code/ed/ether/ideas-chain/contracts/helpers/BaseStorage.sol",
    "exportedSymbols": {
      "BaseStorage": [
        63
      ],
      "Owned": [
        109
      ]
    },
    "id": 64,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:1"
      },
      {
        "absolutePath": "/home/daelankane/code/ed/ether/ideas-chain/contracts/helpers/Owned.sol",
        "file": "./Owned.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 110,
        "src": "69:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 109,
              "src": "116:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$109",
                "typeString": "contract Owned"
              }
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "116:5:1"
          }
        ],
        "contractDependencies": [
          109
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 63,
        "linearizedBaseContracts": [
          63,
          109
        ],
        "name": "BaseStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4b24ea47",
            "id": 39,
            "mutability": "mutable",
            "name": "controllerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 63,
            "src": "127:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "127:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "239:49:1",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "controllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "245:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "_controllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "265:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "245:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "245:38:1"
                }
              ]
            },
            "functionSelector": "f3d3d448",
            "id": 51,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44,
                "modifierName": {
                  "id": 43,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 87,
                  "src": "229:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "229:9:1"
              }
            ],
            "name": "setControllerAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_controllerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "194:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "193:28:1"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:1"
            },
            "scope": 63,
            "src": "164:124:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "318:58:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 54,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "332:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "332:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 56,
                          "name": "controllerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "346:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "332:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "324:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "324:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "324:40:1"
                },
                {
                  "id": 60,
                  "nodeType": "PlaceholderStatement",
                  "src": "370:1:1"
                }
              ]
            },
            "id": 62,
            "name": "onlyController",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:2:1"
            },
            "src": "292:84:1",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 64,
        "src": "92:286:1"
      }
    ],
    "src": "36:342:1"
  },
  "legacyAST": {
    "absolutePath": "/home/daelankane/code/ed/ether/ideas-chain/contracts/helpers/BaseStorage.sol",
    "exportedSymbols": {
      "BaseStorage": [
        63
      ],
      "Owned": [
        109
      ]
    },
    "id": 64,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:1"
      },
      {
        "absolutePath": "/home/daelankane/code/ed/ether/ideas-chain/contracts/helpers/Owned.sol",
        "file": "./Owned.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 110,
        "src": "69:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 109,
              "src": "116:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$109",
                "typeString": "contract Owned"
              }
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "116:5:1"
          }
        ],
        "contractDependencies": [
          109
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 63,
        "linearizedBaseContracts": [
          63,
          109
        ],
        "name": "BaseStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4b24ea47",
            "id": 39,
            "mutability": "mutable",
            "name": "controllerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 63,
            "src": "127:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "127:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "239:49:1",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "controllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "245:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "_controllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "265:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "245:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "245:38:1"
                }
              ]
            },
            "functionSelector": "f3d3d448",
            "id": 51,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44,
                "modifierName": {
                  "id": 43,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 87,
                  "src": "229:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "229:9:1"
              }
            ],
            "name": "setControllerAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_controllerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "194:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "193:28:1"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:1"
            },
            "scope": 63,
            "src": "164:124:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "318:58:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 54,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "332:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "332:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 56,
                          "name": "controllerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "346:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "332:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "324:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "324:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "324:40:1"
                },
                {
                  "id": 60,
                  "nodeType": "PlaceholderStatement",
                  "src": "370:1:1"
                }
              ]
            },
            "id": 62,
            "name": "onlyController",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:2:1"
            },
            "src": "292:84:1",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 64,
        "src": "92:286:1"
      }
    ],
    "src": "36:342:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-25T10:44:13.974Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}