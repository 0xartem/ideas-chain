{"ast":null,"code":"import Web3 from \"web3\";\nimport contract from \"truffle-contract\";\n\nvar getWeb3 = function getWeb3() {\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n\n    try {\n      window.ethereum.enable().then(function () {\n        console.log('User allowed access to the app');\n      });\n    } catch (e) {\n      console.log('User denied access to the app');\n    }\n\n    return web3;\n  } // Legacy DApp Browsers\n  else if (window.web3) {\n      web3 = new Web3(window.web3.currentProvider);\n      return web3;\n    } // Non-DApp Browsers\n    else {\n        alert('You have to install MetaMask !');\n      }\n\n  return undefined;\n};\n\nexport var eth = getWeb3().eth;\nexport var getInstance = function getInstance(artifact) {\n  var contracObj = contract(artifact);\n  contracObj.setProvider(getWeb3());\n  return contracObj.deployed();\n};","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/web3/provider.js"],"names":["Web3","contract","getWeb3","window","ethereum","web3","enable","then","console","log","e","currentProvider","alert","undefined","eth","getInstance","artifact","contracObj","setProvider","deployed"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACnBC,IAAAA,IAAI,GAAG,IAAIL,IAAJ,CAASG,MAAM,CAACC,QAAhB,CAAP;;AACA,QAAI;AACDD,MAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,GAAyBC,IAAzB,CAA8B,YAAW;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,OAFD;AAGF,KAJD,CAIE,OAAMC,CAAN,EAAS;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;;AACD,WAAOJ,IAAP;AACF,GAVA,CAWD;AAXC,OAYI,IAAIF,MAAM,CAACE,IAAX,EAAiB;AAClBA,MAAAA,IAAI,GAAG,IAAIL,IAAJ,CAASG,MAAM,CAACE,IAAP,CAAYM,eAArB,CAAP;AACA,aAAON,IAAP;AACH,KAHI,CAIL;AAJK,SAKA;AACDO,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;;AACD,SAAOC,SAAP;AACA,CAtBD;;AAwBA,OAAO,IAAMC,GAAG,GAAGZ,OAAO,GAAGY,GAAtB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AACvC,MAAMC,UAAU,GAAGhB,QAAQ,CAACe,QAAD,CAA3B;AACAC,EAAAA,UAAU,CAACC,WAAX,CAAuBhB,OAAO,EAA9B;AACA,SAAOe,UAAU,CAACE,QAAX,EAAP;AACD,CAJM","sourcesContent":["import Web3 from \"web3\"\nimport contract from \"truffle-contract\"\n\nconst getWeb3 = () => {\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n    try { \n       window.ethereum.enable().then(function() {\n           console.log('User allowed access to the app');\n       });\n    } catch(e) {\n      console.log('User denied access to the app');\n    }\n    return web3\n }\n // Legacy DApp Browsers\n else if (window.web3) {\n     web3 = new Web3(window.web3.currentProvider);\n     return web3\n }\n // Non-DApp Browsers\n else {\n     alert('You have to install MetaMask !');\n }\n return undefined\n}\n\nexport const eth = getWeb3().eth\n\nexport const getInstance = (artifact) => {\n  const contracObj = contract(artifact)\n  contracObj.setProvider(getWeb3())\n  return contracObj.deployed()\n}"]},"metadata":{},"sourceType":"module"}