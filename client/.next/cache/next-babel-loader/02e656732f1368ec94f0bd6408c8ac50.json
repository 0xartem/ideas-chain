{"ast":null,"code":"import _regeneratorRuntime from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { eth, getInstance } from './provider';\nimport UserStorage from './artifacts/UserStorage.json';\nexport var getUserInfo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId) {\n    var storage, profile;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getInstance(UserStorage);\n\n          case 2:\n            storage = _context.sent;\n            _context.next = 5;\n            return storage.profiles.call(userId);\n\n          case 5:\n            profile = _context.sent;\n            return _context.abrupt(\"return\", profile);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUserInfo(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/web3/users.js"],"names":["eth","getInstance","UserStorage","getUserInfo","userId","storage","profiles","call","profile"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHH,WAAW,CAACC,WAAD,CADR;;AAAA;AACnBG,YAAAA,OADmB;AAAA;AAAA,mBAEHA,OAAO,CAACC,QAAR,CAAiBC,IAAjB,CAAsBH,MAAtB,CAFG;;AAAA;AAEnBI,YAAAA,OAFmB;AAAA,6CAGlBA,OAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import { eth, getInstance } from './provider'\nimport UserStorage from './artifacts/UserStorage.json'\n\nexport const getUserInfo = async (userId) => {\n  const storage = await getInstance(UserStorage)\n  const profile = await storage.profiles.call(userId)\n  return profile\n}"]},"metadata":{},"sourceType":"module"}