{"ast":null,"code":"import { eth, getInstance } from './provider';\nimport UserStorage from './artifacts/UserStorage.json';\nimport UserController from \"./artifacts/UserController.json\";\nexport const getUserInfo = async userId => {\n  const storage = await getInstance(UserStorage);\n  const profile = await storage.profiles.call(userId);\n  return profile;\n};\nexport const createUser = async username => {\n  const controller = await getInstance(UserController);\n\n  try {\n    await ethereum.enable();\n    const addresses = web3.eth.getAccounts();\n    const result = controller.createUser(eth.utils.fromAscii(username), {\n      from: addresses[0]\n    });\n    return result;\n  } catch (err) {\n    console.err(\"Err: \", err);\n  }\n};","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/web3/users.js"],"names":["eth","getInstance","UserStorage","UserController","getUserInfo","userId","storage","profile","profiles","call","createUser","username","controller","ethereum","enable","addresses","web3","getAccounts","result","utils","fromAscii","from","err","console"],"mappings":"AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAC3C,QAAMC,OAAO,GAAG,MAAML,WAAW,CAACC,WAAD,CAAjC;AACA,QAAMK,OAAO,GAAG,MAAMD,OAAO,CAACE,QAAR,CAAiBC,IAAjB,CAAsBJ,MAAtB,CAAtB;AACA,SAAOE,OAAP;AACD,CAJM;AAMP,OAAO,MAAMG,UAAU,GAAG,MAAOC,QAAP,IAAoB;AAC5C,QAAMC,UAAU,GAAG,MAAMX,WAAW,CAACE,cAAD,CAApC;;AAEA,MAAI;AACF,UAAMU,QAAQ,CAACC,MAAT,EAAN;AACA,UAAMC,SAAS,GAAGC,IAAI,CAAChB,GAAL,CAASiB,WAAT,EAAlB;AAEA,UAAMC,MAAM,GAAGN,UAAU,CAACF,UAAX,CACbV,GAAG,CAACmB,KAAJ,CAAUC,SAAV,CAAoBT,QAApB,CADa,EAEb;AACEU,MAAAA,IAAI,EAAEN,SAAS,CAAC,CAAD;AADjB,KAFa,CAAf;AAMA,WAAOG,MAAP;AACD,GAXD,CAWE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBA,GAArB;AACD;AACF,CAjBM","sourcesContent":["import { eth, getInstance } from './provider'\nimport UserStorage from './artifacts/UserStorage.json'\nimport UserController from \"./artifacts/UserController.json\"\n\nexport const getUserInfo = async (userId) => {\n  const storage = await getInstance(UserStorage)\n  const profile = await storage.profiles.call(userId)\n  return profile\n}\n\nexport const createUser = async (username) => {\n  const controller = await getInstance(UserController)\n\n  try {\n    await ethereum.enable()\n    const addresses = web3.eth.getAccounts();\n\n    const result = controller.createUser(\n      eth.utils.fromAscii(username),\n      {\n        from: addresses[0]\n      }\n    );\n    return result;\n  } catch (err) {\n    console.err(\"Err: \", err)\n  }\n}"]},"metadata":{},"sourceType":"module"}