{"ast":null,"code":"import _regeneratorRuntime from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport getWeb3 from '../web3/get-web3';\nimport { getInstance } from './contract-instance';\nimport UserStorage from './artifacts/UserStorage.json';\nimport UserController from \"./artifacts/UserController.json\";\nexport var getUserInfo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId) {\n    var web3, storage, profile;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getWeb3();\n\n          case 2:\n            web3 = _context.sent;\n            _context.next = 5;\n            return getInstance(web3.currentProvider, UserStorage);\n\n          case 5:\n            storage = _context.sent;\n            _context.next = 8;\n            return storage.profiles.call(userId);\n\n          case 8:\n            profile = _context.sent;\n            return _context.abrupt(\"return\", profile);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUserInfo(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var createUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username) {\n    var controller, addresses, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getInstance(web3.currentProvider, UserController);\n\n          case 2:\n            controller = _context2.sent;\n            _context2.prev = 3;\n            addresses = web3.eth.getAccounts();\n            result = controller.createUser(eth.utils.fromAscii(username), {\n              from: addresses[0]\n            });\n            return _context2.abrupt(\"return\", result);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.error(\"Err: \", _context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 9]]);\n  }));\n\n  return function createUser(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/web3/users.js"],"names":["getWeb3","getInstance","UserStorage","UserController","getUserInfo","userId","web3","currentProvider","storage","profiles","call","profile","createUser","username","controller","addresses","eth","getAccounts","result","utils","fromAscii","from","console","error"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNL,OAAO,EADD;;AAAA;AACnBM,YAAAA,IADmB;AAAA;AAAA,mBAEHL,WAAW,CAACK,IAAI,CAACC,eAAN,EAAuBL,WAAvB,CAFR;;AAAA;AAEnBM,YAAAA,OAFmB;AAAA;AAAA,mBAGHA,OAAO,CAACC,QAAR,CAAiBC,IAAjB,CAAsBL,MAAtB,CAHG;;AAAA;AAGnBM,YAAAA,OAHmB;AAAA,6CAIlBA,OAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXP,WAAW;AAAA;AAAA;AAAA,GAAjB;AAOP,OAAO,IAAMQ,UAAU;AAAA,uEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCZ,WAAW,CAACK,IAAI,CAACC,eAAN,EAAuBJ,cAAvB,CADZ;;AAAA;AAClBW,YAAAA,UADkB;AAAA;AAIhBC,YAAAA,SAJgB,GAIJT,IAAI,CAACU,GAAL,CAASC,WAAT,EAJI;AAMhBC,YAAAA,MANgB,GAMPJ,UAAU,CAACF,UAAX,CACbI,GAAG,CAACG,KAAJ,CAAUC,SAAV,CAAoBP,QAApB,CADa,EAEb;AACEQ,cAAAA,IAAI,EAAEN,SAAS,CAAC,CAAD;AADjB,aAFa,CANO;AAAA,8CAYfG,MAZe;;AAAA;AAAA;AAAA;AActBI,YAAAA,OAAO,CAACC,KAAR,CAAc,OAAd;;AAdsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVX,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import getWeb3 from '../web3/get-web3'\nimport { getInstance } from './contract-instance'\nimport UserStorage from './artifacts/UserStorage.json'\nimport UserController from \"./artifacts/UserController.json\"\n\nexport const getUserInfo = async (userId) => {\n  const web3 = await getWeb3();\n  const storage = await getInstance(web3.currentProvider, UserStorage)\n  const profile = await storage.profiles.call(userId)\n  return profile\n}\n\nexport const createUser = async (username) => {\n  const controller = await getInstance(web3.currentProvider, UserController)\n\n  try {\n    const addresses = web3.eth.getAccounts();\n\n    const result = controller.createUser(\n      eth.utils.fromAscii(username),\n      {\n        from: addresses[0]\n      }\n    );\n    return result;\n  } catch (err) {\n    console.error(\"Err: \", err)\n  }\n}"]},"metadata":{},"sourceType":"module"}