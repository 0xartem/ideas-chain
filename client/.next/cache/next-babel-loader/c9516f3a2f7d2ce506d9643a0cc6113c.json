{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport getWeb3 from '../web3/get-web3';\nimport { getUserInfo, createUser } from \"../web3/users\";\nexport default class IndexPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"web3\", void 0);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      try {\n        // Get network provider and web3 instance.\n        this.web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    });\n\n    _defineProperty(this, \"logUser\", async () => {\n      const userInfo = await getUserInfo(1);\n      console.log(userInfo);\n    });\n\n    _defineProperty(this, \"createUser\", async () => {\n      const tx = await createUser(\"tristan\");\n      console.log(tx);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.logUser,\n        children: \"Get user with ID 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createUser,\n        children: \"Create user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js"],"names":["React","getWeb3","getUserInfo","createUser","IndexPage","Component","web3","accounts","eth","getAccounts","console","log","error","alert","userInfo","tx","render","logUser"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;;AAAA;;AAAA,+CAIjC,YAAY;AAC9B,UAAI;AACF;AACA,aAAKC,IAAL,GAAY,MAAML,OAAO,EAAzB,CAFE,CAIF;;AACA,cAAMM,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,OAPD,CAOE,OAAOK,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,CACF,wEADE,CAAL;AAGAH,QAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACF,KAnBoD;;AAAA,qCAqB3C,YAAY;AACpB,YAAME,QAAQ,GAAG,MAAMZ,WAAW,CAAC,CAAD,CAAlC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD,KAxBoD;;AAAA,wCA0BxC,YAAY;AACvB,YAAMC,EAAE,GAAG,MAAMZ,UAAU,CAAC,SAAD,CAA3B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;AACD,KA7BoD;AAAA;;AA+BrDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAE,KAAKd,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA1CoD","sourcesContent":["import React from 'react'\nimport getWeb3 from '../web3/get-web3'\nimport { getUserInfo, createUser } from \"../web3/users\"\n\nexport default class IndexPage extends React.Component {\n\n  web3\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      this.web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  logUser = async () => {\n    const userInfo = await getUserInfo(1)\n    console.log(userInfo)\n  }\n\n  createUser = async () => {\n    const tx = await createUser(\"tristan\")\n    console.log(tx)\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.logUser}>\n          Get user with ID 1\n        </button>\n        <button onClick={this.createUser}>\n          Create user \n        </button>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}