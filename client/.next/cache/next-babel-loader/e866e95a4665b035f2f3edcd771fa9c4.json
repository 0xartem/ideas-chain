{"ast":null,"code":"import _regeneratorRuntime from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { eth, getInstance } from './provider';\nimport UserStorage from './artifacts/UserStorage.json';\nimport UserController from \"./artifacts/UserController.json\";\nexport var getUserInfo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId) {\n    var storage, profile;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getInstance(UserStorage);\n\n          case 2:\n            storage = _context.sent;\n            _context.next = 5;\n            return storage.profiles.call(userId);\n\n          case 5:\n            profile = _context.sent;\n            return _context.abrupt(\"return\", profile);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUserInfo(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var createUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username) {\n    var controller, addresses, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getInstance(UserController);\n\n          case 2:\n            controller = _context2.sent;\n            _context2.prev = 3;\n            _context2.next = 6;\n            return ethereum.enable();\n\n          case 6:\n            addresses = web3.eth.getAccounts();\n            result = controller.createUser(eth.utils.fromAscii(username), {\n              from: addresses[0]\n            });\n            return _context2.abrupt(\"return\", result);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.err(\"Err: \", _context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 11]]);\n  }));\n\n  return function createUser(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/web3/users.js"],"names":["eth","getInstance","UserStorage","UserController","getUserInfo","userId","storage","profiles","call","profile","createUser","username","controller","ethereum","enable","addresses","web3","getAccounts","result","utils","fromAscii","from","console","err"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHJ,WAAW,CAACC,WAAD,CADR;;AAAA;AACnBI,YAAAA,OADmB;AAAA;AAAA,mBAEHA,OAAO,CAACC,QAAR,CAAiBC,IAAjB,CAAsBH,MAAtB,CAFG;;AAAA;AAEnBI,YAAAA,OAFmB;AAAA,6CAGlBA,OAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;AAMP,OAAO,IAAMM,UAAU;AAAA,uEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCV,WAAW,CAACE,cAAD,CADZ;;AAAA;AAClBS,YAAAA,UADkB;AAAA;AAAA;AAAA,mBAIhBC,QAAQ,CAACC,MAAT,EAJgB;;AAAA;AAKhBC,YAAAA,SALgB,GAKJC,IAAI,CAAChB,GAAL,CAASiB,WAAT,EALI;AAOhBC,YAAAA,MAPgB,GAOPN,UAAU,CAACF,UAAX,CACbV,GAAG,CAACmB,KAAJ,CAAUC,SAAV,CAAoBT,QAApB,CADa,EAEb;AACEU,cAAAA,IAAI,EAAEN,SAAS,CAAC,CAAD;AADjB,aAFa,CAPO;AAAA,8CAafG,MAbe;;AAAA;AAAA;AAAA;AAetBI,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAfsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVb,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import { eth, getInstance } from './provider'\nimport UserStorage from './artifacts/UserStorage.json'\nimport UserController from \"./artifacts/UserController.json\"\n\nexport const getUserInfo = async (userId) => {\n  const storage = await getInstance(UserStorage)\n  const profile = await storage.profiles.call(userId)\n  return profile\n}\n\nexport const createUser = async (username) => {\n  const controller = await getInstance(UserController)\n\n  try {\n    await ethereum.enable()\n    const addresses = web3.eth.getAccounts();\n\n    const result = controller.createUser(\n      eth.utils.fromAscii(username),\n      {\n        from: addresses[0]\n      }\n    );\n    return result;\n  } catch (err) {\n    console.err(\"Err: \", err)\n  }\n}"]},"metadata":{},"sourceType":"module"}