{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js\";\nimport React from 'react';\nimport { eth, getInstance } from '../web3/provider';\nimport UserStorage from \"../web3/artifacts/UserStorage.json\";\nexport default class IndexPage extends React.Component {\n  async componentDidMount() {\n    try {\n      await ethereum.enable(); // Prompt user to let our DApp access their addresses\n\n      const addresses = await eth.getAccounts(); // Get user's ETH addresses\n\n      console.log(addresses);\n      const balance = await eth.getBalance(addresses[0]);\n      console.log(balance);\n      console.log(UserStorage);\n      const userStorage = await getInstance(UserStorage);\n      const {\n        username\n      } = await userStorage.profiles.call(1);\n      console.log(\"Username\", username);\n    } catch (err) {\n      console.error(\"User denied access to their ETH addresses!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js"],"names":["React","eth","getInstance","UserStorage","IndexPage","Component","componentDidMount","ethereum","enable","addresses","getAccounts","console","log","balance","getBalance","userStorage","username","profiles","call","err","error","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,kBAAjC;AAEA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAErD,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMC,QAAQ,CAACC,MAAT,EAAN,CADE,CACsB;;AACxB,YAAMC,SAAS,GAAG,MAAMR,GAAG,CAACS,WAAJ,EAAxB,CAFE,CAEwC;;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,YAAMI,OAAO,GAAG,MAAMZ,GAAG,CAACa,UAAJ,CAAeL,SAAS,CAAC,CAAD,CAAxB,CAAtB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AAEA,YAAMY,WAAW,GAAG,MAAMb,WAAW,CAACC,WAAD,CAArC;AACA,YAAM;AAAEa,QAAAA;AAAF,UAAe,MAAMD,WAAW,CAACE,QAAZ,CAAqBC,IAArB,CAA0B,CAA1B,CAA3B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,QAAxB;AACD,KAXD,CAWE,OAAOG,GAAP,EAAY;AACZR,MAAAA,OAAO,CAACS,KAAR,CAAc,4CAAd;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAvBoD","sourcesContent":["import React from 'react'\nimport { eth, getInstance } from '../web3/provider' \n\nimport UserStorage from \"../web3/artifacts/UserStorage.json\"\n\nexport default class IndexPage extends React.Component {\n\n  async componentDidMount() {\n    try {\n      await ethereum.enable() // Prompt user to let our DApp access their addresses\n      const addresses = await eth.getAccounts() // Get user's ETH addresses\n      console.log(addresses)\n      const balance = await eth.getBalance(addresses[0]);\n      console.log(balance);\n      console.log(UserStorage);\n\n      const userStorage = await getInstance(UserStorage);\n      const { username } = await userStorage.profiles.call(1);\n      console.log(\"Username\", username);\n    } catch (err) {\n      console.error(\"User denied access to their ETH addresses!\")\n    }\n  }\n\n  render() {\n    return (\n      <h1>hello world!</h1>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}