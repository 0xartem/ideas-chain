{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport getWeb3 from '../web3/get-web3';\nimport { getUserInfo, createUser } from \"../web3/users\";\nimport { getIdea, createIdea } from '../web3/ideas';\nexport default class IndexPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      try {\n        // Get network provider and web3 instance.\n        this.web3 = await getWeb3();\n        console.log(this.web3.currentProvider); // Use web3 to get the user's accounts.\n\n        const accounts = await this.web3.eth.getAccounts();\n        console.log(accounts);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    });\n\n    _defineProperty(this, \"logUser\", async () => {\n      const userInfo = await getUserInfo(this.web3, 1);\n      console.log(userInfo);\n    });\n\n    _defineProperty(this, \"createUser\", async () => {\n      const tx = await createUser(this.web3, \"artem\");\n      console.log(tx);\n    });\n\n    _defineProperty(this, \"logIdea\", async () => {\n      const ideaInfo = await getIdea(this.web3, 1);\n      console.log(ideaInfo);\n    });\n\n    _defineProperty(this, \"createIdea\", async () => {\n      const tx = await createIdea(this.web3, \"my super cool idea\");\n      console.log(tx);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.logUser,\n        children: \"Get user with ID 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createUser,\n        children: \"Create user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js"],"names":["React","getWeb3","getUserInfo","createUser","getIdea","createIdea","IndexPage","Component","web3","console","log","currentProvider","accounts","eth","getAccounts","error","alert","userInfo","tx","ideaInfo","render","logUser"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,eAApC;AAEA,eAAe,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAAA;AAAA;;AAAA,+CAEjC,YAAY;AAC9B,UAAI;AACF;AACA,aAAKC,IAAL,GAAY,MAAMP,OAAO,EAAzB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,IAAL,CAAUG,eAAtB,EAHE,CAKF;;AACA,cAAMC,QAAQ,GAAG,MAAM,KAAKJ,IAAL,CAAUK,GAAV,CAAcC,WAAd,EAAvB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACD,OARD,CAQE,OAAOG,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,CACF,wEADE,CAAL;AAGAP,QAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD;AACF,KAlBoD;;AAAA,qCAoB3C,YAAY;AACpB,YAAME,QAAQ,GAAG,MAAMf,WAAW,CAAC,KAAKM,IAAN,EAAY,CAAZ,CAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACD,KAvBoD;;AAAA,wCAyBxC,YAAY;AACvB,YAAMC,EAAE,GAAG,MAAMf,UAAU,CAAC,KAAKK,IAAN,EAAY,OAAZ,CAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYQ,EAAZ;AACD,KA5BoD;;AAAA,qCA8B3C,YAAY;AACpB,YAAMC,QAAQ,GAAG,MAAMf,OAAO,CAAC,KAAKI,IAAN,EAAY,CAAZ,CAA9B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACD,KAjCoD;;AAAA,wCAmCxC,YAAY;AACvB,YAAMD,EAAE,GAAG,MAAMb,UAAU,CAAC,KAAKG,IAAN,EAAY,oBAAZ,CAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYQ,EAAZ;AACD,KAtCoD;AAAA;;AAwCrDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAE,KAAKlB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAnDoD","sourcesContent":["import React from 'react'\nimport getWeb3 from '../web3/get-web3'\nimport { getUserInfo, createUser } from \"../web3/users\"\nimport { getIdea, createIdea } from '../web3/ideas'\n\nexport default class IndexPage extends React.Component {\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      this.web3 = await getWeb3();\n      console.log(this.web3.currentProvider)\n\n      // Use web3 to get the user's accounts.\n      const accounts = await this.web3.eth.getAccounts();\n      console.log(accounts);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  logUser = async () => {\n    const userInfo = await getUserInfo(this.web3, 1)\n    console.log(userInfo)\n  }\n\n  createUser = async () => {\n    const tx = await createUser(this.web3, \"artem\")\n    console.log(tx)\n  }\n\n  logIdea = async () => {\n    const ideaInfo = await getIdea(this.web3, 1)\n    console.log(ideaInfo)\n  }\n\n  createIdea = async () => {\n    const tx = await createIdea(this.web3, \"my super cool idea\")\n    console.log(tx)\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.logUser}>\n          Get user with ID 1\n        </button>\n        <button onClick={this.createUser}>\n          Create user \n        </button>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}