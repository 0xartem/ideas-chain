{"ast":null,"code":"import { getInstance } from './contract-instance';\nimport IdeaStorage from './artifacts/IdeaStorage.json';\nimport IdeaController from './artifacts/IdeaController.json';\nexport const getIdea = async (web3, ideaId) => {\n  const storage = await getInstance(web3.currentProvider, IdeaStorage);\n  const idea = await storage.ideas.call(ideaId);\n  return {\n    id: parseInt(idea.id),\n    text: idea.text,\n    userId: parseInt(idea.userId),\n    postedAt: parseInt(idea.postedAt)\n  };\n};\nexport const createIdea = async (web3, userId, text) => {\n  const controller = await getInstance(web3.currentProvider, IdeaController);\n\n  try {\n    const addresses = await web3.eth.getAccounts();\n    const result = await controller.createIdea(userId, text, {\n      from: addresses[0]\n    });\n    return result;\n  } catch (err) {\n    console.error(\"Err: \", err);\n  }\n};","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/web3/ideas.js"],"names":["getInstance","IdeaStorage","IdeaController","getIdea","web3","ideaId","storage","currentProvider","idea","ideas","call","id","parseInt","text","userId","postedAt","createIdea","controller","addresses","eth","getAccounts","result","from","err","console","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,OAAOC,IAAP,EAAaC,MAAb,KAAwB;AAC7C,QAAMC,OAAO,GAAG,MAAMN,WAAW,CAACI,IAAI,CAACG,eAAN,EAAuBN,WAAvB,CAAjC;AACA,QAAMO,IAAI,GAAG,MAAMF,OAAO,CAACG,KAAR,CAAcC,IAAd,CAAmBL,MAAnB,CAAnB;AACA,SAAO;AACLM,IAAAA,EAAE,EAAEC,QAAQ,CAACJ,IAAI,CAACG,EAAN,CADP;AAELE,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAFN;AAGLC,IAAAA,MAAM,EAAEF,QAAQ,CAACJ,IAAI,CAACM,MAAN,CAHX;AAILC,IAAAA,QAAQ,EAAEH,QAAQ,CAACJ,IAAI,CAACO,QAAN;AAJb,GAAP;AAMD,CATM;AAWP,OAAO,MAAMC,UAAU,GAAG,OAAOZ,IAAP,EAAaU,MAAb,EAAqBD,IAArB,KAA8B;AACtD,QAAMI,UAAU,GAAG,MAAMjB,WAAW,CAACI,IAAI,CAACG,eAAN,EAAuBL,cAAvB,CAApC;;AACA,MAAI;AACF,UAAMgB,SAAS,GAAG,MAAMd,IAAI,CAACe,GAAL,CAASC,WAAT,EAAxB;AACA,UAAMC,MAAM,GAAG,MAAMJ,UAAU,CAACD,UAAX,CAAsBF,MAAtB,EAA8BD,IAA9B,EAAoC;AAAES,MAAAA,IAAI,EAAEJ,SAAS,CAAC,CAAD;AAAjB,KAApC,CAArB;AACA,WAAOG,MAAP;AACD,GAJD,CAIE,OAAOE,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuBF,GAAvB;AACD;AACF,CATM","sourcesContent":["import { getInstance } from './contract-instance'\nimport IdeaStorage from './artifacts/IdeaStorage.json'\nimport IdeaController from './artifacts/IdeaController.json'\n\nexport const getIdea = async (web3, ideaId) => {\n  const storage = await getInstance(web3.currentProvider, IdeaStorage)\n  const idea = await storage.ideas.call(ideaId)\n  return {\n    id: parseInt(idea.id),\n    text: idea.text,\n    userId: parseInt(idea.userId),\n    postedAt: parseInt(idea.postedAt)\n  }\n}\n\nexport const createIdea = async (web3, userId, text) => {\n  const controller = await getInstance(web3.currentProvider, IdeaController)\n  try {\n    const addresses = await web3.eth.getAccounts()\n    const result = await controller.createIdea(userId, text, { from: addresses[0] })\n    return result\n  } catch (err) {\n    console.error(\"Err: \", err)\n  }\n}"]},"metadata":{},"sourceType":"module"}