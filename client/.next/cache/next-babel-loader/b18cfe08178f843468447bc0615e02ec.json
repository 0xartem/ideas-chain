{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js\";\nimport React from 'react';\nimport { eth } from '../web3/provider';\nexport default class IndexPage extends React.Component {\n  async componentDidMount() {\n    try {\n      await ethereum.enable(); // Prompt user to let our DApp access their addresses\n\n      const addresses = await eth.getAccounts(); // Get user's ETH addresses\n\n      console.log(addresses);\n      const balance = await eth.getBalance(addresses[0]);\n      console.log(balance);\n    } catch (err) {\n      console.error(\"User denied access to their ETH addresses!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js"],"names":["React","eth","IndexPage","Component","componentDidMount","ethereum","enable","addresses","getAccounts","console","log","balance","getBalance","err","error","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,kBAApB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAErD,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMC,QAAQ,CAACC,MAAT,EAAN,CADE,CACsB;;AACxB,YAAMC,SAAS,GAAG,MAAMN,GAAG,CAACO,WAAJ,EAAxB,CAFE,CAEwC;;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,YAAMI,OAAO,GAAG,MAAMV,GAAG,CAACW,UAAJ,CAAeL,SAAS,CAAC,CAAD,CAAxB,CAAtB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD,KAND,CAME,OAAOE,GAAP,EAAY;AACZJ,MAAAA,OAAO,CAACK,KAAR,CAAc,4CAAd;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAlBoD","sourcesContent":["import React from 'react'\nimport { eth } from '../web3/provider' \n\nexport default class IndexPage extends React.Component {\n\n  async componentDidMount() {\n    try {\n      await ethereum.enable() // Prompt user to let our DApp access their addresses\n      const addresses = await eth.getAccounts() // Get user's ETH addresses\n      console.log(addresses)\n      const balance = await eth.getBalance(addresses[0]);\n      console.log(balance);\n    } catch (err) {\n      console.error(\"User denied access to their ETH addresses!\")\n    }\n  }\n\n  render() {\n    return (\n      <h1>hello world!</h1>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}