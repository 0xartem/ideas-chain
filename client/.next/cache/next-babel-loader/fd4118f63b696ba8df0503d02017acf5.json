{"ast":null,"code":"import Web3 from \"web3\";\n\nvar provider = function provider() {\n  // If the user has MetaMask:\n  if (typeof web3 !== 'undefined') {\n    return web3.currentProvider;\n  } else {\n    console.error(\"You need to install MetaMask for this app to work!\");\n  }\n};\n\nexport var eth = new Web3(provider()).eth;","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/web3/provider.js"],"names":["Web3","provider","web3","currentProvider","console","error","eth"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB;AACA,MAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAOA,IAAI,CAACC,eAAZ;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAc,oDAAd;AACD;AACF,CAPD;;AASA,OAAO,IAAMC,GAAG,GAAG,IAAIN,IAAJ,CAASC,QAAQ,EAAjB,EAAqBK,GAAjC","sourcesContent":["import Web3 from \"web3\"\n\nconst provider = () => {\n  // If the user has MetaMask:\n  if (typeof web3 !== 'undefined') {\n    return web3.currentProvider\n  } else {\n    console.error(\"You need to install MetaMask for this app to work!\")\n  }\n}\n\nexport const eth = new Web3(provider()).eth"]},"metadata":{},"sourceType":"module"}