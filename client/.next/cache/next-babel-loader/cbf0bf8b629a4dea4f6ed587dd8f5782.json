{"ast":null,"code":"import _regeneratorRuntime from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/daelankane/code/ed/ether/ideas-chain/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { eth, getInstance } from '../web3/provider';\nimport UserStorage from \"../web3/artifacts/UserStorage.json\";\n\nvar IndexPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(IndexPage, _React$Component);\n\n  var _super = _createSuper(IndexPage);\n\n  function IndexPage() {\n    _classCallCheck(this, IndexPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IndexPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var addresses, balance, userStorage, _yield$userStorage$pr, username;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return ethereum.enable();\n\n              case 3:\n                _context.next = 5;\n                return eth.getAccounts();\n\n              case 5:\n                addresses = _context.sent;\n                // Get user's ETH addresses\n                console.log(addresses);\n                _context.next = 9;\n                return eth.getBalance(addresses[0]);\n\n              case 9:\n                balance = _context.sent;\n                console.log(balance);\n                console.log(UserStorage);\n                _context.next = 14;\n                return getInstance(UserStorage);\n\n              case 14:\n                userStorage = _context.sent;\n                _context.next = 17;\n                return userStorage.profiles.call(1);\n\n              case 17:\n                _yield$userStorage$pr = _context.sent;\n                username = _yield$userStorage$pr.username;\n                console.log(\"Username\", username);\n                _context.next = 25;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"User denied access to their ETH addresses!\");\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 22]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hello world!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return IndexPage;\n}(React.Component);\n\nexport { IndexPage as default };","map":{"version":3,"sources":["/home/daelankane/code/ed/ether/ideas-chain/client/pages/index.js"],"names":["React","eth","getInstance","UserStorage","IndexPage","ethereum","enable","getAccounts","addresses","console","log","getBalance","balance","userStorage","profiles","call","username","error","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,kBAAjC;AAEA,OAAOC,WAAP,MAAwB,oCAAxB;;IAEqBC,S;;;;;;;;;;;;;;;;;;;;;;;uBAITC,QAAQ,CAACC,MAAT,E;;;;uBACkBL,GAAG,CAACM,WAAJ,E;;;AAAlBC,gBAAAA,S;AAAoC;AAC1CC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;uBACsBP,GAAG,CAACU,UAAJ,CAAeH,SAAS,CAAC,CAAD,CAAxB,C;;;AAAhBI,gBAAAA,O;AACNH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;;uBAE0BD,WAAW,CAACC,WAAD,C;;;AAA/BU,gBAAAA,W;;uBACqBA,WAAW,CAACC,QAAZ,CAAqBC,IAArB,CAA0B,CAA1B,C;;;;AAAnBC,gBAAAA,Q,yBAAAA,Q;AACRP,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,QAAxB;;;;;;;AAEAP,gBAAAA,OAAO,CAACQ,KAAR,CAAc,4CAAd;;;;;;;;;;;;;;;;;;6BAIK;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;;;EAvBoCjB,KAAK,CAACkB,S;;SAAxBd,S","sourcesContent":["import React from 'react'\nimport { eth, getInstance } from '../web3/provider' \n\nimport UserStorage from \"../web3/artifacts/UserStorage.json\"\n\nexport default class IndexPage extends React.Component {\n\n  async componentDidMount() {\n    try {\n      await ethereum.enable() // Prompt user to let our DApp access their addresses\n      const addresses = await eth.getAccounts() // Get user's ETH addresses\n      console.log(addresses)\n      const balance = await eth.getBalance(addresses[0]);\n      console.log(balance);\n      console.log(UserStorage);\n\n      const userStorage = await getInstance(UserStorage);\n      const { username } = await userStorage.profiles.call(1);\n      console.log(\"Username\", username);\n    } catch (err) {\n      console.error(\"User denied access to their ETH addresses!\")\n    }\n  }\n\n  render() {\n    return (\n      <h1>hello world!</h1>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}